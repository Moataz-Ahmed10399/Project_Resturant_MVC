
@using Project_Resturant_MVC.ViewModel
@model VmOrder
@{
    ViewData["Title"] = "Update Order";
}

<style>
    body {
        background: linear-gradient(135deg, #fa709a 0%, #fee140 100%);
        min-height: 100vh;
        padding: 40px 0;
    }

    .update-container {
        max-width: 1100px;
        margin: 0 auto;
        padding: 0 20px;
    }

    .page-header {
        text-align: center;
        margin-bottom: 40px;
        animation: fadeIn 0.6s ease-out;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(-20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .page-header h1 {
        color: white;
        font-size: 2.5rem;
        font-weight: 700;
        text-shadow: 0 2px 10px rgba(0,0,0,0.2);
        margin-bottom: 10px;
    }

    .page-header .icon {
        font-size: 3.5rem;
        margin-bottom: 15px;
        animation: bounce 2s infinite;
    }

    @@keyframes bounce {
        0%, 100% {
            transform: translateY(0);
        }

        50% {
            transform: translateY(-10px);
        }
    }

    .update-card {
        background: white;
        border-radius: 20px;
        box-shadow: 0 20px 60px rgba(0,0,0,0.2);
        overflow: hidden;
        animation: slideUp 0.6s ease-out;
    }

    @@keyframes slideUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .form-section {
        padding: 40px;
    }

    .section-title {
        color: #fa709a;
        font-size: 1.5rem;
        font-weight: 700;
        margin-bottom: 25px;
        padding-bottom: 15px;
        border-bottom: 3px solid #fa709a;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .form-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 20px;
        margin-bottom: 25px;
    }

    @@media (max-width: 768px) {
        .form-grid {
            grid-template-columns: 1fr;
        }

        .update-container {
            padding: 0 10px;
        }

        .form-section {
            padding: 20px;
        }

        .page-header h1 {
            font-size: 1.8rem;
        }
    }

    .form-group-custom {
        margin-bottom: 0;
    }

    .form-label {
        font-weight: 600;
        color: #333;
        margin-bottom: 8px;
        font-size: 0.95rem;
        display: block;
    }

    .form-control, .form-select {
        border: 2px solid #e0e0e0;
        border-radius: 10px;
        padding: 12px 15px;
        font-size: 1rem;
        transition: all 0.3s ease;
        width: 100%;
    }

        .form-control:focus, .form-select:focus {
            border-color: #fa709a;
            box-shadow: 0 0 0 0.2rem rgba(250, 112, 154, 0.25);
            transform: translateY(-2px);
        }

    .order-items-section {
        background: #f8f9fa;
        border-radius: 15px;
        padding: 30px;
        margin-bottom: 25px;
    }

    .order-item-row {
        background: white;
        border-radius: 10px;
        padding: 20px;
        margin-bottom: 15px;
        display: grid;
        grid-template-columns: 2fr 1fr 1fr auto;
        gap: 15px;
        align-items: center;
        box-shadow: 0 2px 10px rgba(0,0,0,0.05);
    }

    @@media (max-width: 768px) {
        .order-item-row {
            grid-template-columns: 1fr;
            gap: 10px;
        }
    }

    .item-info {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .item-icon {
        font-size: 2rem;
    }

    .item-details h5 {
        margin: 0 0 5px 0;
        color: #2c3e50;
        font-size: 1.1rem;
    }

    .item-details p {
        margin: 0;
        color: #6c757d;
        font-size: 0.9rem;
    }

    .quantity-control {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .qty-btn {
        width: 35px;
        height: 35px;
        border-radius: 8px;
        border: none;
        background: #fa709a;
        color: white;
        font-weight: 700;
        cursor: pointer;
        transition: all 0.3s ease;
    }

        .qty-btn:hover {
            background: #e55d87;
            transform: scale(1.1);
        }

    .qty-input {
        width: 60px;
        text-align: center;
        border: 2px solid #e0e0e0;
        border-radius: 8px;
        padding: 8px;
        font-weight: 600;
    }

    .price-display {
        text-align: center;
    }

    .unit-price {
        font-size: 0.85rem;
        color: #6c757d;
        display: block;
    }

    .subtotal-price {
        font-size: 1.3rem;
        font-weight: 700;
        color: #28a745;
        display: block;
        margin-top: 5px;
    }

    .btn-remove-item {
        background: #dc3545;
        border: none;
        color: white;
        padding: 10px 15px;
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.3s ease;
    }

        .btn-remove-item:hover {
            background: #c82333;
            transform: scale(1.05);
        }

    .btn-add-item {
        background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
        border: none;
        color: white;
        padding: 12px 25px;
        border-radius: 10px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        gap: 8px;
    }

        .btn-add-item:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(79, 172, 254, 0.4);
        }

    .total-section {
        background: linear-gradient(135deg, #fa709a 0%, #fee140 100%);
        color: white;
        padding: 25px;
        border-radius: 15px;
        margin-bottom: 25px;
        text-align: center;
    }

        .total-section h3 {
            margin: 0 0 10px 0;
            font-size: 1.2rem;
        }

    .total-amount {
        font-size: 2.5rem;
        font-weight: 700;
    }

    .btn-update {
        background: linear-gradient(135deg, #fa709a 0%, #fee140 100%);
        border: none;
        color: white;
        padding: 15px 30px;
        font-size: 1.1rem;
        font-weight: 600;
        border-radius: 10px;
        width: 100%;
        transition: all 0.3s ease;
        margin-top: 20px;
    }

        .btn-update:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 25px rgba(250, 112, 154, 0.4);
        }

    .btn-back {
        background: #6c757d;
        border: none;
        color: white;
        padding: 12px 25px;
        font-size: 1rem;
        font-weight: 600;
        border-radius: 10px;
        width: 100%;
        transition: all 0.3s ease;
        margin-top: 10px;
        text-decoration: none;
        display: block;
        text-align: center;
    }

        .btn-back:hover {
            background: #5a6268;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(108, 117, 125, 0.4);
            color: white;
        }

    .info-badge {
        background: #e7f3ff;
        color: #0066cc;
        padding: 15px;
        border-radius: 10px;
        font-size: 0.95rem;
        margin-bottom: 20px;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .empty-items {
        text-align: center;
        padding: 40px;
        color: #6c757d;
    }

        .empty-items .icon {
            font-size: 3rem;
            margin-bottom: 15px;
            opacity: 0.3;
        }
</style>

<div class="update-container">
    <div class="page-header">
        <div class="icon">📝</div>
        <h1>Update Order</h1>
        <p style="color: white; font-size: 1.1rem;">Modify order details and items</p>
    </div>

    <div class="update-card">
        <form asp-controller="Order" asp-action="Update" asp-route-id="@ViewBag.OrderId" method="post" id="updateOrderForm">
            @Html.AntiForgeryToken()
            <input type="hidden" name="id" value="@ViewBag.OrderId" />

            <div class="form-section">
                <h3 class="section-title">
                    <span>👤</span>
                    Customer Information
                </h3>

                <div class="form-grid">
                    <div class="form-group-custom">
                        <label asp-for="CustomerName" class="form-label">
                            📛 Customer Name
                        </label>
                        <input asp-for="CustomerName" class="form-control" placeholder="Enter customer name" />
                        <span asp-validation-for="CustomerName" class="text-danger"></span>
                    </div>

                    <div class="form-group-custom">
                        <label asp-for="CustomerPhone" class="form-label">
                            📞 Phone Number
                        </label>
                        <input asp-for="CustomerPhone" class="form-control" placeholder="Enter phone number" />
                        <span asp-validation-for="CustomerPhone" class="text-danger"></span>
                    </div>
                </div>

                <div class="form-group-custom">
                    <label asp-for="DeliveryAddress" class="form-label">
                        📍 Delivery Address
                    </label>
                    <input asp-for="DeliveryAddress" class="form-control" placeholder="Enter full delivery address" />
                    <span asp-validation-for="DeliveryAddress" class="text-danger"></span>
                </div>
            </div>

            @* <div class="form-section" style="background: #fff;">
                <h3 class="section-title">
                    <span>🛒</span>
                    Order Items
                </h3>

                <div class="info-badge">
                    💡 <strong>Note:</strong> Add, remove, or modify quantities of items in this order. Prices will be calculated automatically.
                </div>

                <div class="order-items-section" id="orderItemsContainer">
                    <!-- Order items will be dynamically added here -->
                    <div class="empty-items" id="emptyItemsMessage">
                        <div class="icon">📦</div>
                        <p><strong>No items in this order yet.</strong><br>Click "Add Item" to start adding items.</p>
                    </div>
                </div>

                <button type="button" class="btn-add-item" onclick="addOrderItem()">
                    ➕ Add Item
                </button>
            </div> *@
            <div class="order-items-section" id="order-items-container">
                @for (int i = 0; i < Model.Items.Count; i++)
                {
                    <div class="order-item-row">
                        <input type="hidden" name="Items.Index" value="@i" />
                        <div class="item-info">
                            <div class="item-icon">🍕</div>
                            <div class="item-details">
                                <label class="form-label">Menu Item</label>
                                <select asp-for="Items[i].MenuItemId"
                                        asp-items="Model.MenuItemsSelect"
                                        class="form-select">
                                    <option value="">-- Select Item --</option>
                                </select>
                                <span asp-validation-for="Items[i].MenuItemId" class="text-danger small"></span>
                            </div>
                        </div>
                        <div class="quantity-control">
                            <button type="button" class="qty-btn dec">-</button>
                            <input asp-for="Items[i].Quantity" class="qty-input" type="number" min="1" />
                            <button type="button" class="qty-btn inc">+</button>
                        </div>
                        <button type="button" class="btn-remove-item remove-item-btn">🗑️</button>
                    </div>
                }
            </div>

            <button type="button" class="btn-add-item" id="add-item-btn">
                ➕ Add Item
            </button>


            @* <div class="form-section" style="background: #f8f9fa;">
                <h3 class="section-title">
                    <span>🧾</span>
                    Order Settings
                </h3>

                <div class="info-badge">
                    الحالة الحالية: <strong>@ViewBag.CurrentStatus</strong>
                    <span class="ms-2 text-muted">(يتم تحديث الحالة من خلال شاشة المطبخ فقط)</span>
                </div>

                <div class="form-grid">
                    <div class="form-group-custom">
                        <label class="form-label">🍽️ Order Type</label>
                        <select asp-for="Type" asp-items="Model.OrderTypes" class="form-select">
                            <option value="">-- Select Type --</option>
                        </select>
                        <span asp-validation-for="Type" class="text-danger"></span>
                    </div>
                </div>
            </div> *@

            <div class="form-section">
               
                <div class="d-grid gap-2">
                    <button type="submit" class="btn-update">
                        ✅ Update Order
                    </button>
                    <a asp-controller="Order" asp-action="GetAllOrders" class="btn-back">⬅️ Back to Orders</a>

                </div>
            </div>
        </form>
    </div>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        let itemCounter = @Model.Items.Count;

        document.getElementById('add-item-btn').addEventListener('click', function () {
          const container = document.getElementById('order-items-container');
          const index = itemCounter++;

          const firstSelect = container.querySelector('select[name="Items[0].MenuItemId"]');
          const optionsHtml = firstSelect ? firstSelect.innerHTML : '<option value="">-- Select Item --</option>';

          const row = document.createElement('div');
          row.classList.add('order-item-row');
          row.innerHTML = `
            <input type="hidden" name="Items.Index" value="${index}" />
            <div class="item-info">
              <div class="item-icon">🍕</div>
              <div class="item-details">
                <label class="form-label">Menu Item</label>
                <select name="Items[${index}].MenuItemId" class="form-select">
                  ${optionsHtml}
                </select>
                <span class="text-danger small field-validation-valid" data-valmsg-for="Items[${index}].MenuItemId" data-valmsg-replace="true"></span>
              </div>
            </div>
            <div class="quantity-control">
              <button type="button" class="qty-btn dec">-</button>
              <input name="Items[${index}].Quantity" class="qty-input" type="number" value="1" min="1" />
              <button type="button" class="qty-btn inc">+</button>
            </div>
            <button type="button" class="btn-remove-item remove-item-btn">🗑️</button>
          `;
          container.appendChild(row);
        });

        document.addEventListener('click', function (e) {
          if (e.target.classList.contains('inc')) {
            const input = e.target.closest('.order-item-row').querySelector('input[name$=".Quantity"]');
            input.value = (parseInt(input.value) || 1) + 1;
          }
          if (e.target.classList.contains('dec')) {
            const input = e.target.closest('.order-item-row').querySelector('input[name$=".Quantity"]');
            const v = parseInt(input.value) || 1;
            input.value = v > 1 ? v - 1 : 1;
          }
          if (e.target.classList.contains('remove-item-btn')) {
            e.target.closest('.order-item-row').remove();
          }
        });
    </script>
}
