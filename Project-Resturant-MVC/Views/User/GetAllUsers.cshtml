

@model List<(Project_Resturant_MVC.Models.ApplicationUser User, string Role)>
@{
    ViewData["Title"] = "User Management";
}

<style>
    body {
        background: linear-gradient(135deg, #8e2de2 0%, #4a00e0 100%);
        min-height: 100vh;
        padding: 40px 0;
    }

    .users-container {
        max-width: 1400px;
        margin: 0 auto;
        padding: 0 20px;
    }

    .page-header {
        text-align: center;
        margin-bottom: 40px;
        animation: fadeIn 0.6s ease-out;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(-20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .page-header h1 {
        color: white;
        font-size: 2.5rem;
        font-weight: 700;
        text-shadow: 0 2px 10px rgba(0,0,0,0.2);
        margin-bottom: 10px;
    }

    .page-header .icon {
        font-size: 3.5rem;
        margin-bottom: 15px;
        animation: pulse 2s infinite;
    }

    @@keyframes pulse {
        0%, 100% {
            transform: scale(1);
        }

        50% {
            transform: scale(1.1);
        }
    }

    .stats-row {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 20px;
        margin-bottom: 40px;
    }

    .stat-card {
        background: white;
        border-radius: 15px;
        padding: 25px;
        box-shadow: 0 10px 30px rgba(0,0,0,0.2);
        text-align: center;
        transition: all 0.3s ease;
        animation: slideUp 0.6s ease-out;
    }

    @@keyframes slideUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .stat-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 15px 40px rgba(0,0,0,0.3);
    }

    .stat-card .icon {
        font-size: 2.5rem;
        margin-bottom: 10px;
    }

    .stat-card .number {
        font-size: 2rem;
        font-weight: 700;
        color: #8e2de2;
        margin: 10px 0;
    }

    .stat-card .label {
        color: #666;
        font-size: 1rem;
        font-weight: 600;
    }

    .action-bar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 30px;
        flex-wrap: wrap;
        gap: 15px;
    }

    .btn-custom {
        padding: 12px 25px;
        border-radius: 10px;
        font-weight: 600;
        border: none;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-block;
    }

    .btn-add {
        background: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);
        color: white;
    }

        .btn-add:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(17, 153, 142, 0.4);
            color: white;
        }

    .btn-back {
        background: white;
        color: #8e2de2;
    }

        .btn-back:hover {
            background: #f8f9fa;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
            color: #8e2de2;
        }

    .users-table-container {
        background: white;
        border-radius: 20px;
        overflow: hidden;
        box-shadow: 0 20px 60px rgba(0,0,0,0.2);
    }

    .table {
        margin-bottom: 0;
    }

        .table thead {
            background: linear-gradient(135deg, #8e2de2 0%, #4a00e0 100%);
            color: white;
        }

            .table thead th {
                border: none;
                padding: 18px 15px;
                font-weight: 600;
                text-transform: uppercase;
                font-size: 0.85rem;
                letter-spacing: 0.5px;
            }

        .table tbody tr {
            transition: all 0.3s ease;
        }

            .table tbody tr:hover {
                background: #f8f9fa;
                transform: scale(1.01);
            }

        .table tbody td {
            padding: 18px 15px;
            vertical-align: middle;
            border-bottom: 1px solid #e9ecef;
        }

    .role-badge {
        padding: 8px 15px;
        border-radius: 20px;
        font-weight: 600;
        font-size: 0.85rem;
        display: inline-block;
    }

    .role-admin {
        background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
        color: white;
    }

    .role-kitchen {
        background: linear-gradient(135deg, #fa709a 0%, #fee140 100%);
        color: white;
    }

    .role-client {
        background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
        color: white;
    }

    .btn-action {
        padding: 8px 15px;
        border-radius: 8px;
        font-size: 0.85rem;
        font-weight: 600;
        border: none;
        transition: all 0.3s ease;
        margin: 0 3px;
        text-decoration: none;
        display: inline-block;
    }

    .btn-change-role {
        background: #ffc107;
        color: #000;
    }

        .btn-change-role:hover {
            background: #ffb300;
            transform: translateY(-2px);
            box-shadow: 0 5px 10px rgba(255, 193, 7, 0.4);
            color: #000;
        }

    .btn-delete {
        background: #dc3545;
        color: white;
    }

        .btn-delete:hover {
            background: #c82333;
            transform: translateY(-2px);
            box-shadow: 0 5px 10px rgba(220, 53, 69, 0.4);
            color: white;
        }

    .user-avatar {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        display: inline-flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-weight: 700;
        margin-right: 10px;
    }

    .user-info {
        display: flex;
        align-items: center;
    }

    .user-name {
        font-weight: 600;
        color: #333;
    }

    .no-users {
        text-align: center;
        padding: 60px 20px;
        color: #666;
    }

        .no-users .icon {
            font-size: 4rem;
            margin-bottom: 20px;
            opacity: 0.5;
        }

    .btn-action {
        display: inline-block;
        padding: 8px 14px;
        border: none;
        border-radius: 6px;
        font-size: 14px;
        cursor: pointer;
        color: white;
        text-decoration: none;
        transition: 0.3s;
    }

    .btn-change-role {
        background-color: #007bff;
    }

        .btn-change-role:hover {
            background-color: #0056b3;
        }

    .btn-delete {
        background-color: #dc3545;
    }

        .btn-delete:hover {
            background-color: #a71d2a;
        }

</style>

<div class="users-container">
    <div class="page-header">
        <div class="icon">👥</div>
        <h1>User Management</h1>
        <p style="color: white; font-size: 1.1rem;">Manage system users and roles</p>
    </div>

    <div class="stats-row">
        <div class="stat-card">
            <div class="icon">👤</div>
            <div class="number">@Model.Count</div>
            <div class="label">Total Users</div>
        </div>
        <div class="stat-card">
            <div class="icon">👨‍💼</div>
            <div class="number">@Model.Count(u => u.Role == "Admin")</div>
            <div class="label">Admins</div>
        </div>
        <div class="stat-card">
            <div class="icon">👨‍🍳</div>
            <div class="number">@Model.Count(u => u.Role == "Kitchen")</div>
            <div class="label">Kitchen Staff</div>
        </div>
        <div class="stat-card">
            <div class="icon">👨‍💻</div>
            <div class="number">@Model.Count(u => u.Role == "Client" || u.Role == null)</div>
            <div class="label">Clients</div>
        </div>


    </div>

    <div class="action-bar">
        <a href="/Role/AddRole" class="btn-custom btn-add">
            ➕ Add New Role
        </a>
        <a href="/" class="btn-custom btn-back">
            ⬅️ Back to Home
        </a>
    </div>

    @if (Model != null && Model.Any())
    {
        <div class="users-table-container">
            <table class="table">
                <thead>
                    <tr>
                        <th>User</th>
                        <th>Email Address</th>
                        <th>Address</th>
                        <th>Role</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in Model)
                    {
                        var userRole = user.Role ?? "Client";

                        var roleClass = userRole == "Admin" ? "role-admin" :
                        userRole == "Kitchen" ? "role-kitchen" : "role-client";

                        <tr>
                            <td>
                                <div class="user-info">
                                    <div class="user-avatar">
                                        @user.User.UserName.Substring(0, 1).ToUpper()
                                    </div>
                                    <span class="user-name">@user.User.UserName</span>
                                </div>
                            </td>
                            <td>@user.User.Email</td>
                            <td>@(user.User.Address ?? "N/A")</td>
                            <td>
                                <span class="role-badge @roleClass">
                                    @userRole
                                </span>
                            </td>
                            <td>
                                <a asp-controller="User" asp-action="ChangeRole" asp-route-userId="@user.User.Id"
                                   class="btn-action btn-change-role">
                                    🔄 Change Role
                                </a>


                                <form asp-action="DeleteUser" method="post" style="display:inline;">
                                    <input type="hidden" name="userId" value="@user.User.Id" />
                                    <button type="submit" class="btn-action btn-delete"
                                            onclick="return confirm('Are you sure you want to delete this user?')">
                                        🗑️ Delete
                                    </button>
                                </form>

                            </td>
                        </tr>
                    }

                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="users-table-container">
            <div class="no-users">
                <div class="icon">👤</div>
                <h3>No users found</h3>
                <p>There are no users in the system yet.</p>
            </div>
        </div>
    }
</div>