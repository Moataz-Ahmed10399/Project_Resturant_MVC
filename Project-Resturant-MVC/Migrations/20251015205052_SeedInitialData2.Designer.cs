// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project_Resturant_MVC.Context;

#nullable disable

namespace Project_Resturant_MVC.Migrations
{
    [DbContext(typeof(ResturantDbContext))]
    [Migration("20251015205052_SeedInitialData2")]
    partial class SeedInitialData2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Project_Resturant_MVC.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 10, 15, 20, 50, 52, 219, DateTimeKind.Utc).AddTicks(1801),
                            Description = "Start your meal with our delicious appetizers",
                            IsDeleted = false,
                            Name = "Appetizers"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 10, 15, 20, 50, 52, 219, DateTimeKind.Utc).AddTicks(1802),
                            Description = "Hearty and satisfying main dishes",
                            IsDeleted = false,
                            Name = "Main Courses"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 10, 15, 20, 50, 52, 219, DateTimeKind.Utc).AddTicks(1803),
                            Description = "Sweet treats to end your meal",
                            IsDeleted = false,
                            Name = "Desserts"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 10, 15, 20, 50, 52, 219, DateTimeKind.Utc).AddTicks(1805),
                            Description = "Refreshing drinks",
                            IsDeleted = false,
                            Name = "Beverages"
                        });
                });

            modelBuilder.Entity("Project_Resturant_MVC.Models.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PreparationTimeMinutes")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 10, 15, 20, 50, 52, 219, DateTimeKind.Utc).AddTicks(1952),
                            Description = "Crispy wings with buffalo sauce",
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Chicken Wings",
                            PreparationTimeMinutes = 15,
                            Price = 45.00m
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 10, 15, 20, 50, 52, 219, DateTimeKind.Utc).AddTicks(1954),
                            Description = "Fried cheese sticks with marinara",
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Mozzarella Sticks",
                            PreparationTimeMinutes = 10,
                            Price = 35.00m
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 10, 15, 20, 50, 52, 219, DateTimeKind.Utc).AddTicks(1955),
                            Description = "Fresh romaine with parmesan and croutons",
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Caesar Salad",
                            PreparationTimeMinutes = 8,
                            Price = 40.00m
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 10, 15, 20, 50, 52, 219, DateTimeKind.Utc).AddTicks(1957),
                            Description = "Classic pizza with tomato, mozzarella, and basil",
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Margherita Pizza",
                            PreparationTimeMinutes = 20,
                            Price = 85.00m
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 10, 15, 20, 50, 52, 219, DateTimeKind.Utc).AddTicks(1959),
                            Description = "Juicy beef patty with cheese and fries",
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Beef Burger",
                            PreparationTimeMinutes = 18,
                            Price = 95.00m
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 10, 15, 20, 50, 52, 219, DateTimeKind.Utc).AddTicks(1960),
                            Description = "Creamy pasta with bacon and parmesan",
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Pasta Carbonara",
                            PreparationTimeMinutes = 15,
                            Price = 80.00m
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 10, 15, 20, 50, 52, 219, DateTimeKind.Utc).AddTicks(1962),
                            Description = "Marinated chicken breast with vegetables",
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Grilled Chicken",
                            PreparationTimeMinutes = 25,
                            Price = 110.00m
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 10, 15, 20, 50, 52, 219, DateTimeKind.Utc).AddTicks(1963),
                            Description = "Rich chocolate layer cake",
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Chocolate Cake",
                            PreparationTimeMinutes = 5,
                            Price = 50.00m
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 10, 15, 20, 50, 52, 219, DateTimeKind.Utc).AddTicks(1965),
                            Description = "Creamy New York style cheesecake",
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Cheesecake",
                            PreparationTimeMinutes = 5,
                            Price = 55.00m
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 10, 15, 20, 50, 52, 219, DateTimeKind.Utc).AddTicks(1966),
                            Description = "Three scoops with toppings",
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Ice Cream Sundae",
                            PreparationTimeMinutes = 3,
                            Price = 40.00m
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2025, 10, 15, 20, 50, 52, 219, DateTimeKind.Utc).AddTicks(1968),
                            Description = "Freshly squeezed orange juice",
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Fresh Orange Juice",
                            PreparationTimeMinutes = 3,
                            Price = 25.00m
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2025, 10, 15, 20, 50, 52, 219, DateTimeKind.Utc).AddTicks(1969),
                            Description = "Italian style coffee with foam",
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Cappuccino",
                            PreparationTimeMinutes = 5,
                            Price = 30.00m
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2025, 10, 15, 20, 50, 52, 219, DateTimeKind.Utc).AddTicks(1971),
                            Description = "Coca Cola, Sprite, or Fanta",
                            IsAvailable = true,
                            IsDeleted = false,
                            Name = "Soft Drink",
                            PreparationTimeMinutes = 1,
                            Price = 15.00m
                        });
                });

            modelBuilder.Entity("Project_Resturant_MVC.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("DeliveredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryAddress")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("EstimatedDeliveryMinutes")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ReadyAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 10, 15, 20, 50, 52, 219, DateTimeKind.Utc).AddTicks(2005),
                            CustomerName = "Ahmed Ali",
                            CustomerPhone = "01012345678",
                            DeliveryAddress = "Cairo, Nasr City",
                            Discount = 0.00m,
                            IsDeleted = false,
                            Status = 3,
                            Subtotal = 180.00m,
                            Tax = 0.00m,
                            Total = 180.00m,
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 10, 15, 20, 50, 52, 219, DateTimeKind.Utc).AddTicks(2008),
                            CustomerName = "Sara Mohamed",
                            CustomerPhone = "01098765432",
                            DeliveryAddress = "Giza, Dokki",
                            Discount = 0.00m,
                            IsDeleted = false,
                            Status = 0,
                            Subtotal = 95.00m,
                            Tax = 0.00m,
                            Total = 95.00m,
                            Type = 1
                        });
                });

            modelBuilder.Entity("Project_Resturant_MVC.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MenuItemId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 10, 15, 20, 50, 52, 219, DateTimeKind.Utc).AddTicks(2028),
                            IsDeleted = false,
                            MenuItemId = 5,
                            OrderId = 1,
                            Quantity = 1,
                            Subtotal = 95.00m,
                            UnitPrice = 95.00m
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 10, 15, 20, 50, 52, 219, DateTimeKind.Utc).AddTicks(2031),
                            IsDeleted = false,
                            MenuItemId = 8,
                            OrderId = 1,
                            Quantity = 1,
                            Subtotal = 50.00m,
                            UnitPrice = 50.00m
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 10, 15, 20, 50, 52, 219, DateTimeKind.Utc).AddTicks(2033),
                            IsDeleted = false,
                            MenuItemId = 11,
                            OrderId = 1,
                            Quantity = 1,
                            Subtotal = 25.00m,
                            UnitPrice = 25.00m
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 10, 15, 20, 50, 52, 219, DateTimeKind.Utc).AddTicks(2034),
                            IsDeleted = false,
                            MenuItemId = 4,
                            OrderId = 2,
                            Quantity = 1,
                            Subtotal = 85.00m,
                            UnitPrice = 85.00m
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 10, 15, 20, 50, 52, 219, DateTimeKind.Utc).AddTicks(2035),
                            IsDeleted = false,
                            MenuItemId = 13,
                            OrderId = 2,
                            Quantity = 1,
                            Subtotal = 10.00m,
                            UnitPrice = 10.00m
                        });
                });

            modelBuilder.Entity("Project_Resturant_MVC.Models.MenuItem", b =>
                {
                    b.HasOne("Project_Resturant_MVC.Models.Category", "Category")
                        .WithMany("MenuItems")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Project_Resturant_MVC.Models.OrderItem", b =>
                {
                    b.HasOne("Project_Resturant_MVC.Models.MenuItem", "MenuItem")
                        .WithMany("OrderItems")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Project_Resturant_MVC.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuItem");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Project_Resturant_MVC.Models.Category", b =>
                {
                    b.Navigation("MenuItems");
                });

            modelBuilder.Entity("Project_Resturant_MVC.Models.MenuItem", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("Project_Resturant_MVC.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
